# List of input files or directories to process (accepts .xlsx, .xls, .csv)
input_files:
  - "./data/source/"
# Output settings: directory and format for cleaned files
output:
  dir: "./data/source_limpio/"
  format: "xlsx"

# Schema definitions: expected data types for each field
schema:
  mesa_de_ayuda: string       # Name of help desk or support queue
  nivel: int                  # Ticket priority level or severity
  prioridad: string           # Ticket priority as text
  origen: string              # Source system or reporting channel
  estado: string              # Ticket status
  tipo: string                # Ticket type or classification
  fecha_creacion: datetime    # Creation timestamp of the ticket
  fecha_cierre: datetime      # Closing timestamp of the ticket
  asunto: string              # Subject or summary of the ticket
  fecha_solucion: datetime    # Resolution timestamp
  id: string                  # Unique identifier for each ticket
  categoria_principal: string # Main category of the ticket
  subcategoria: string        # Subcategory of the ticket
  accion: string              # Action or next steps extracted from category

# Field mappings and transformations applied after reading each column
mappings:
  mesa_de_ayuda:
    source: "Mesa de ayuda" # Column name in source file
    transforms:
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
      - { name: "remove_pattern", pattern: "nivel\\s*\\d+" }
  nivel:
    source: "Mesa de ayuda"
    transforms:
      - { name: "regex_extract", pattern: "nivel\\s*(\\d+)", group: 1, as_type: int }
  prioridad:
    source: "Prioridad"
    transforms:
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
  origen:
    source: "Origen"
    transforms:
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
  estado:
    source: "Estado"
    transforms:
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
  tipo:
    source: "Tipo"
    transforms:
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
  fecha_creacion:
    source: "Fecha de creación"
    transforms:
      - { name: "to_datetime", format: null }
      - { name: "to_isoformat" }
  fecha_cierre:
    source: "Fecha de cierre"
    transforms:
      - { name: "to_datetime" }
      - { name: "to_isoformat" }
  asunto:
    source: "Asunto"
    transforms:
      - { name: "trim" }
      - { name: "normalize_text", lowercase: true}
  fecha_solucion:
    source: "Fecha de solución"
    transforms:
      - { name: "to_datetime" }
      - { name: "to_isoformat" }
  id:
    source: "ID"
    transforms:
      - { name: "cast_type", to: "string" }
      - { name: "strip_leading_zeros" }
  categoria_principal:
    source: "Categoría"
    transforms:
      - { name: "split_by", delimiter: ">", index: 1 }
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
  subcategoria:
    source: "Categoría"
    transforms:
      - { name: "split_by", delimiter: ">", index: 2 }
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }
  accion:
    source: "Categoría"
    transforms:
      - { name: "split_by_rest", delimiter: ">", start_index: 3, join_with: " > " }
      - { name: "normalize_text", lowercase: true, strip_accents: true, trim: true }

# Quality checks configuration: duplicates and allowed values
quality:
  duplicates:
    key: "id"     # Column to identify duplicate rows
    action: "keep_latest" # Action to take (e.g., drop or keep latest)
    latest_by: "fecha_creacion"   # Column to determine which record is latest
  allowed_values:
    estado: ["abierto", "cerrado", "en espera", "otro"] # Permitted status values
  null_handling:
    fill_with_null: true    # Whether to explicitly fill missing values with null
